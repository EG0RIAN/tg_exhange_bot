from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# ============================================================================
# –ù–û–í–û–ï –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ (3 –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è)
# ============================================================================
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üíµ –ö—É–ø–∏—Ç—å USDT")],
        [KeyboardButton(text="üí∏ –ü—Ä–æ–¥–∞—Ç—å USDT")],
        [KeyboardButton(text="üìÑ –û–ø–ª–∞—Ç–∏—Ç—å –∏–Ω–≤–æ–π—Å")],
        [KeyboardButton(text="üìñ FAQ")],
        [KeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")],
    ],
    resize_keyboard=True
)

def add_back_button(keyboard: InlineKeyboardMarkup) -> InlineKeyboardMarkup:
    keyboard.inline_keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")])
    return keyboard

def add_manager_button(keyboard: InlineKeyboardMarkup) -> InlineKeyboardMarkup:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º' –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ"""
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager")
    ])
    return keyboard

# ============================================================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´ –î–õ–Ø –ù–û–í–û–ì–û FLOW
# ============================================================================

def get_countries_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="country:russia")],
            [InlineKeyboardButton(text="üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="country:kazakhstan")],
            [InlineKeyboardButton(text="üá∫üáø –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", callback_data="country:uzbekistan")],
            [InlineKeyboardButton(text="üá¶üáø –ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω", callback_data="country:azerbaijan")],
            [InlineKeyboardButton(text="üá¨üá™ –ì—Ä—É–∑–∏—è", callback_data="country:georgia")],
            [InlineKeyboardButton(text="üáπüá∑ –¢—É—Ä—Ü–∏—è", callback_data="country:turkey")],
            [InlineKeyboardButton(text="üá¶üá™ –û–ê–≠", callback_data="country:uae")],
        ]
    )
    return add_manager_button(kb)

async def get_priority_cities_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ + –∫–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞'"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üèõ –ú–æ—Å–∫–≤–∞", callback_data="city:moscow")],
            [InlineKeyboardButton(text="üåâ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data="city:spb")],
            [InlineKeyboardButton(text="üå¥ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", callback_data="city:krasnodar")],
            [InlineKeyboardButton(text="üè≠ –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", callback_data="city:rostov")],
            [InlineKeyboardButton(text="üåç –û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞", callback_data="city:other")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")],
        ]
    )
    return add_manager_button(kb)

async def get_all_cities_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ –≤—Å–µ–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ (–∫—Ä–æ–º–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö)"""
    from src.db import get_pg_pool
    
    pool = await get_pg_pool()
    async with pool.acquire() as conn:
        cities = await conn.fetch("""
            SELECT code, name FROM cities 
            WHERE enabled = true 
            AND code NOT IN ('moscow', 'spb', 'krasnodar', 'rostov')
            ORDER BY name
        """)
    
    buttons = []
    for city in cities:
        buttons.append([InlineKeyboardButton(
            text=city['name'], 
            callback_data=f"city:{city['code']}"
        )])
    
    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    kb.inline_keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_priority_cities")])
    return add_manager_button(kb)

def get_currencies_keyboard(city_code=None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã (—Ç–æ–ª—å–∫–æ —Ä—É–±–ª—å)"""
    currencies = [
        ("‚ÇΩ RUB (–†—É–±–ª—å)", "RUB"),
    ]
    
    buttons = [[InlineKeyboardButton(text=name, callback_data=f"currency:{code}")] 
               for name, code in currencies]
    
    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    kb.inline_keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")])
    return add_manager_button(kb)

def get_amount_keyboard_v2():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã (—Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥)"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
    )
    return add_manager_button(kb)

def get_payment_methods_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (–¥–ª—è –∏–Ω–≤–æ–π—Å–∞)"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üíµ –ù–∞–ª–∏—á–Ω—ã–µ", callback_data="payment:cash")],
            [InlineKeyboardButton(text="üíé USDT", callback_data="payment:usdt")],
        ]
    )
    kb.inline_keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")])
    return add_manager_button(kb)

def get_invoice_purposes_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∏–Ω–≤–æ–π—Å–∞"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üè¢ –û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥", callback_data="purpose:services")],
            [InlineKeyboardButton(text="üè¨ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="purpose:goods")],
            [InlineKeyboardButton(text="üì¶ –î–æ—Å—Ç–∞–≤–∫–∞/–ª–æ–≥–∏—Å—Ç–∏–∫–∞", callback_data="purpose:delivery")],
            [InlineKeyboardButton(text="üíº –ü—Ä–æ—á–µ–µ", callback_data="purpose:other")],
        ]
    )
    kb.inline_keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")])
    return add_manager_button(kb)

def get_confirm_keyboard_v2():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm:yes")],
            [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="confirm:edit")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm:cancel")],
        ]
    )
    return add_manager_button(kb)

def get_rate_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫—É—Ä—Å", callback_data="rate:confirm")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="rate:cancel")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")],
        ]
    )
    return add_manager_button(kb)

def get_pairs_keyboard(pairs: list[str]) -> InlineKeyboardMarkup:
    buttons = [InlineKeyboardButton(text=pair, callback_data=f"pair:{pair}") for pair in pairs]
    rows = [buttons[i:i+2] for i in range(0, len(buttons), 2)]
    kb = InlineKeyboardMarkup(inline_keyboard=rows)
    return add_back_button(kb)

def get_amount_keyboard():
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="100", callback_data="amount:100"),
             InlineKeyboardButton(text="250", callback_data="amount:250")],
            [InlineKeyboardButton(text="1000", callback_data="amount:1000")],
            [InlineKeyboardButton(text="üìù –°–≤–æ—è", callback_data="amount:custom")],
        ]
    )
    return add_back_button(kb)

def get_payout_keyboard(methods: list[str]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=method, callback_data=f"payout:{method}")] for method in methods]
    )
    return add_back_button(kb)

async def get_cities_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ + –∫–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞'"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üèõ –ú–æ—Å–∫–≤–∞", callback_data="city:moscow")],
            [InlineKeyboardButton(text="üåâ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", callback_data="city:spb")],
            [InlineKeyboardButton(text="üå¥ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", callback_data="city:krasnodar")],
            [InlineKeyboardButton(text="üè≠ –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", callback_data="city:rostov")],
            [InlineKeyboardButton(text="üåç –û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞", callback_data="city:other")],
        ]
    )
    return kb

def get_confirm_keyboard():
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm")],
            [InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
        ]
    )
    return add_back_button(kb)

def get_faq_categories_keyboard(categories: list[tuple]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ FAQ
    categories: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, name)
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=name, callback_data=f"faq_cat:{cat_id}")] for cat_id, name in categories
        ] + [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq_back")]]
    )

def get_faq_questions_keyboard(questions: list[tuple]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ FAQ
    questions: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, question)
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=question, callback_data=f"faq_q:{qid}")] for qid, question in questions
        ] + [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq_back")]]
    )

def get_faq_answer_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq_back")]]
    )

def get_livechat_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å —á–∞—Ç", callback_data="livechat_off")]]
    )

def get_admin_menu_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ö—É—Ä—Å—ã", callback_data="admin_rates")],
            [InlineKeyboardButton(text="FAQ", callback_data="admin_faq")],
            [InlineKeyboardButton(text="–ó–∞—è–≤–∫–∏", callback_data="admin_orders")],
            [InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
            [InlineKeyboardButton(text="–õ–æ–≥–∏", callback_data="admin_logs")],
            [InlineKeyboardButton(text="–ö–æ–Ω—Ç–µ–Ω—Ç", callback_data="admin_content")],
            [InlineKeyboardButton(text="üåê –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", callback_data="admin_integrations")],
        ]
    )

def get_admin_content_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã", callback_data="admin_trading_pairs")],
            [InlineKeyboardButton(text="–°–ø–æ—Å–æ–±—ã –≤—ã–ø–ª–∞—Ç—ã", callback_data="admin_payout_methods")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")],
        ]
    )

def get_admin_integrations_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üü¢ Grinex Exchange", callback_data="admin_grinex")],
            [InlineKeyboardButton(text="üìä FX Rates System", callback_data="admin_fx_system")],
            [InlineKeyboardButton(text="üåç –ö—É—Ä—Å—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º", callback_data="admin_city_rates")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")],
        ]
    )

def get_trading_pairs_keyboard(pairs: list[dict]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
    pairs: —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä
    """
    buttons = []
    for pair in pairs:
        buttons.append([InlineKeyboardButton(
            text=f"{pair['base_name']} ‚û°Ô∏è {pair['quote_name']}", 
            callback_data=f"rates_pair:{pair['id']}"
        )])
    
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="rates_back")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_rates_back_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="rates_back")]]
    )

def get_rate_tiers_keyboard(pair_id, tiers):
    rows = []
    for tier in tiers:
        rows.append([InlineKeyboardButton(text=f"–û—Ç ${tier['min_amount']:,} ‚û°Ô∏è {tier['rate']}", callback_data=f"admin_edit_rate:{tier['id']}")])
    rows.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å", callback_data=f"admin_add_rate:{pair_id}")])
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_trading_pairs")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_rates_list_keyboard(rates, page, total):
    rows = []
    for rate in rates:
        rows.append([InlineKeyboardButton(text=f"{rate['pair']} {rate['bid']}/{rate['ask']}", callback_data=f"admin_rate:{rate['id']}")])
    nav = []
    if page > 1:
        nav.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"admin_rates_page:{page-1}"))
    if page * 10 < total:
        nav.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"admin_rates_page:{page+1}"))
    if nav:
        rows.append(nav)
    rows.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="admin_rate_add"), InlineKeyboardButton(text="‚è∞ –ò–º–ø–æ—Ä—Ç Rapira", callback_data="admin_rate_import")])
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_admin_order_status_keyboard(order_id, current_status):
    statuses = ["new", "processing", "done"]
    rows = [[InlineKeyboardButton(text=s if s != current_status else f"‚úÖ {s}", callback_data=f"admin_order_status:{order_id}:{s}")] for s in statuses if s != current_status]
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_orders")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_admin_orders_keyboard(orders, page, total):
    rows = [[InlineKeyboardButton(text=f"#{o['id']} {o['pair']} {o['amount']} {o['status']}", callback_data=f"admin_order:{o['id']}")] for o in orders]
    nav = []
    if page > 1:
        nav.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"admin_orders_page:{page-1}"))
    if page * 10 < total:
        nav.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"admin_orders_page:{page+1}"))
    if nav:
        rows.append(nav)
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_broadcast_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="admin_broadcast_preview")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_back")],
        ]
    )

def get_broadcast_confirm_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üöÄ –†–∞–∑–æ—Å–ª–∞—Ç—å", callback_data="admin_broadcast_send")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_back")],
        ]
    )

def get_logs_filter_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùó error", callback_data="admin_logs_error"),
             InlineKeyboardButton(text="‚ö†Ô∏è warning", callback_data="admin_logs_warning"),
             InlineKeyboardButton(text="‚ÑπÔ∏è info", callback_data="admin_logs_info")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")],
        ]
    )

def get_admin_faq_categories_keyboard(categories):
    """–°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ FAQ
    categories: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, name)
    """
    rows = [[InlineKeyboardButton(text=name, callback_data=f"admin_faq_cat:{cat_id}")] for cat_id, name in categories]
    rows.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="admin_faq_cat_add")])
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_admin_faq_questions_keyboard(questions, category):
    """–°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞–º–∏ FAQ
    questions: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, question)
    category: id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    """
    rows = [[InlineKeyboardButton(text=question, callback_data=f"admin_faq_q:{qid}")] for qid, question in questions]
    rows.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data=f"admin_faq_q_add:{category}")])
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_faq"),])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def get_admin_faq_edit_keyboard(faq_id):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data=f"admin_faq_save:{faq_id}")],
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"admin_faq_del:{faq_id}")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_faq")],
        ]
    ) 