from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from src.i18n import _
from src.db import get_pg_pool

router = Router()

def get_language_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")],
            [InlineKeyboardButton(text="üá¨üáß English", callback_data="lang_en")],
        ]
    )

@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings_menu(message: Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:", reply_markup=get_language_keyboard())

@router.callback_query(F.data.startswith("lang_"))
async def settings_set_lang(callback: CallbackQuery, state: FSMContext):
    lang = callback.data.split("_")[1]  # lang_ru -> ru, lang_en -> en
    pool = await get_pg_pool()
    async with pool.acquire() as conn:
        await conn.execute("UPDATE users SET lang=$1 WHERE tg_id=$2", lang, callback.from_user.id)
    
    await callback.message.edit_text(_("language_set", lang=lang))
    await callback.answer()

# –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
@router.message(F.text.in_(["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá¨üáß English"]))
async def settings_set_lang_old(message: Message, state: FSMContext):
    lang = 'ru' if '–†—É—Å' in message.text else 'en'
    pool = await get_pg_pool()
    async with pool.acquire() as conn:
        await conn.execute("UPDATE users SET lang=$1 WHERE tg_id=$2", lang, message.from_user.id)
    await message.answer(_("language_set", lang=lang)) 