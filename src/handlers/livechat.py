from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from src.db import get_pg_pool, start_live_chat, close_live_chat, is_live_chat_active
from src.keyboards import get_livechat_keyboard
from src.services.notifications import notify_new_chat
import os

SUPPORT_CHAT_ID = int(os.getenv("SUPPORT_CHAT_ID", "0"))

router = Router()

@router.message(F.text == "üë®‚Äçüíº –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É")
async def livechat_start(message: Message, state: FSMContext):
    pool = await get_pg_pool()
    await start_live_chat(pool, message.from_user.id)
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º —á–∞—Ç–µ
    user_name = message.from_user.full_name or message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    await notify_new_chat(message.from_user.id, user_name)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    try:
        from aiogram import Bot
        bot = Bot(token=os.getenv("BOT_TOKEN"))
        await bot.send_message(
            SUPPORT_CHAT_ID,
            f"üÜï –ù–æ–≤—ã–π —á–∞—Ç!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\nID: {message.from_user.id}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥."
        )
        await bot.session.close()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {e}")
    
    await message.answer("Live-chat –≤–∫–ª—é—á—ë–Ω. –í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.", reply_markup=get_livechat_keyboard())

@router.callback_query(F.data == "livechat_off")
async def livechat_off(callback: CallbackQuery, state: FSMContext):
    pool = await get_pg_pool()
    await close_live_chat(pool, callback.from_user.id)
    await callback.message.edit_text("Live-chat –æ—Ç–∫–ª—é—á—ë–Ω.")

@router.message(F.chat.id == SUPPORT_CHAT_ID, F.reply_to_message)
async def livechat_reply(message: Message):
    # –û–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        reply_text = message.reply_to_message.text or message.reply_to_message.caption or ""
        user_id = None
        
        # –ò—â–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–µ
        if "üÜî ID:" in reply_text:
            try:
                user_id = int(reply_text.split("üÜî ID:")[1].split("\n")[0].strip())
            except Exception as e:
                pass
        
        if not user_id:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        pool = await get_pg_pool()
        is_active = await is_live_chat_active(pool, user_id)
        
        if not is_active:
            await message.answer(f"‚ùå –ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        from aiogram import Bot
        bot = Bot(token=os.getenv("BOT_TOKEN"))
        
        if message.text:
            await bot.send_message(user_id, f"üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä: {message.text}")
        elif message.photo:
            await bot.send_photo(user_id, message.photo[-1].file_id, caption=f"üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä: {message.caption or ''}")
        elif message.video:
            await bot.send_video(user_id, message.video.file_id, caption=f"üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä: {message.caption or ''}")
        elif message.document:
            await bot.send_document(user_id, message.document.file_id, caption=f"üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä: {message.caption or ''}")
        elif message.voice:
            await bot.send_voice(user_id, message.voice.file_id, caption="üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä")
        elif message.audio:
            await bot.send_audio(user_id, message.audio.file_id, caption=f"üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä: {message.caption or ''}")
        else:
            await bot.send_message(user_id, "üë®‚Äçüíº –û–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        await bot.session.close()
        
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ –ø–æ #close
        if message.text and message.text.strip() == "#close":
            await close_live_chat(pool, user_id)
            await message.answer(f"‚úÖ –ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} –∑–∞–∫—Ä—ã—Ç.")
            await bot.send_message(user_id, "üîö –ß–∞—Ç —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω.")
            await bot.session.close()
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")

@router.message(F.chat.type.in_({"private"}))
async def livechat_forward(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ live-chat —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤
    pool = await get_pg_pool()
    is_active = await is_live_chat_active(pool, message.from_user.id)
    
    if not is_active:
        return
    
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤ support-group
    try:
        from aiogram import Bot
        bot = Bot(token=os.getenv("BOT_TOKEN"))
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_info = f"üë§ {message.from_user.full_name or message.from_user.username or '–ë–µ–∑ –∏–º–µ–Ω–∏'}\nüÜî ID: {message.from_user.id}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if message.text:
            await bot.send_message(SUPPORT_CHAT_ID, f"{user_info}\n\nüí¨ {message.text}")
        elif message.photo:
            await bot.send_photo(SUPPORT_CHAT_ID, message.photo[-1].file_id, caption=f"{user_info}\n\n{message.caption or ''}")
        elif message.video:
            await bot.send_video(SUPPORT_CHAT_ID, message.video.file_id, caption=f"{user_info}\n\n{message.caption or ''}")
        elif message.document:
            await bot.send_document(SUPPORT_CHAT_ID, message.document.file_id, caption=f"{user_info}\n\n{message.caption or ''}")
        elif message.voice:
            await bot.send_voice(SUPPORT_CHAT_ID, message.voice.file_id, caption=f"{user_info}")
        elif message.audio:
            await bot.send_audio(SUPPORT_CHAT_ID, message.audio.file_id, caption=f"{user_info}\n\n{message.caption or ''}")
        else:
            await bot.send_message(SUPPORT_CHAT_ID, f"{user_info}\n\nüìé –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è")
        
        await bot.session.close()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}") 