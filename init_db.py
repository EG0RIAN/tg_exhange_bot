import asyncio
import os
from dotenv import load_dotenv
from src.db import get_pg_pool

load_dotenv()

async def init_db():
    pool = await get_pg_pool()
    async with pool.acquire() as conn:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
        migrations = [
            'migrations/001_init.sql',
            'migrations/002_extended_schema.sql',
            'migrations/003_faq_schema.sql'
        ]
        
        for migration_file in migrations:
            if os.path.exists(migration_file):
                print(f"–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: {migration_file}")
                with open(migration_file, 'r', encoding='utf-8') as f:
                    sql = f.read()
                await conn.execute(sql)
                print(f"‚úÖ {migration_file} –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            else:
                print(f"‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {migration_file}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        tables = await conn.fetch("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name
        """)
        
        print(f"\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã ({len(tables)}):")
        for table in tables:
            print(f"   - {table['table_name']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        users_count = await conn.fetchval("SELECT COUNT(*) FROM users")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        
        # –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã
        pairs_count = await conn.fetchval("SELECT COUNT(*) FROM trading_pairs")
        print(f"   üí± –¢–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä: {pairs_count}")
        
        # –ö—É—Ä—Å—ã
        rates_count = await conn.fetchval("SELECT COUNT(*) FROM rate_tiers")
        print(f"   üìà –ö—É—Ä—Å–æ–≤: {rates_count}")
        
        # –°–ø–æ—Å–æ–±—ã –≤—ã–ø–ª–∞—Ç—ã
        methods_count = await conn.fetchval("SELECT COUNT(*) FROM payout_methods")
        print(f"   üí≥ –°–ø–æ—Å–æ–±—ã –≤—ã–ø–ª–∞—Ç—ã: {methods_count}")
        
        # FAQ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        faq_categories_count = await conn.fetchval("SELECT COUNT(*) FROM faq_categories")
        print(f"   üìö FAQ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {faq_categories_count}")
        
        # FAQ –≤–æ–ø—Ä–æ—Å—ã
        faq_questions_count = await conn.fetchval("SELECT COUNT(*) FROM faq_questions")
        print(f"   ‚ùì FAQ –≤–æ–ø—Ä–æ—Å–æ–≤: {faq_questions_count}")

if __name__ == "__main__":
    asyncio.run(init_db()) 